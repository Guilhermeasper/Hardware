Classic Timing Analyzer report for DedoNoQuartusEGritaria
Wed Oct 16 00:10:47 2019
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Timing Analyzer Summary
  3. Timing Analyzer Settings
  4. Clock Settings Summary
  5. Parallel Compilation
  6. Clock Setup: 'clock'
  7. tsu
  8. tco
  9. th
 10. Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Timing Analyzer Summary                                                                                                                                                          ;
+------------------------------+-------+---------------+------------------------------------------------+---------------+-------------------+------------+----------+--------------+
; Type                         ; Slack ; Required Time ; Actual Time                                    ; From          ; To                ; From Clock ; To Clock ; Failed Paths ;
+------------------------------+-------+---------------+------------------------------------------------+---------------+-------------------+------------+----------+--------------+
; Worst-case tsu               ; N/A   ; None          ; 5.600 ns                                       ; funct[2]      ; next_state.000000 ; --         ; clock    ; 0            ;
; Worst-case tco               ; N/A   ; None          ; 7.152 ns                                       ; mux_7[0]~reg0 ; mux_6[2]          ; clock      ; --       ; 0            ;
; Worst-case th                ; N/A   ; None          ; -2.897 ns                                      ; funct[5]      ; next_state.ADD    ; --         ; clock    ; 0            ;
; Clock Setup: 'clock'         ; N/A   ; None          ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE  ; ALU_OUT~reg0      ; clock      ; clock    ; 0            ;
; Total number of failed paths ;       ;               ;                                                ;               ;                   ;            ;          ; 0            ;
+------------------------------+-------+---------------+------------------------------------------------+---------------+-------------------+------------+----------+--------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Timing Analyzer Settings                                                                                                                            ;
+------------------------------------------------------------------------------------------------------+--------------------+------+----+-------------+
; Option                                                                                               ; Setting            ; From ; To ; Entity Name ;
+------------------------------------------------------------------------------------------------------+--------------------+------+----+-------------+
; Device Name                                                                                          ; EP2S15F484C3       ;      ;    ;             ;
; Timing Models                                                                                        ; Final              ;      ;    ;             ;
; Default hold multicycle                                                                              ; Same as Multicycle ;      ;    ;             ;
; Cut paths between unrelated clock domains                                                            ; On                 ;      ;    ;             ;
; Cut off read during write signal paths                                                               ; On                 ;      ;    ;             ;
; Cut off feedback from I/O pins                                                                       ; On                 ;      ;    ;             ;
; Report Combined Fast/Slow Timing                                                                     ; Off                ;      ;    ;             ;
; Ignore Clock Settings                                                                                ; Off                ;      ;    ;             ;
; Analyze latches as synchronous elements                                                              ; On                 ;      ;    ;             ;
; Enable Recovery/Removal analysis                                                                     ; Off                ;      ;    ;             ;
; Enable Clock Latency                                                                                 ; Off                ;      ;    ;             ;
; Use TimeQuest Timing Analyzer                                                                        ; Off                ;      ;    ;             ;
; Number of source nodes to report per destination node                                                ; 10                 ;      ;    ;             ;
; Number of destination nodes to report                                                                ; 10                 ;      ;    ;             ;
; Number of paths to report                                                                            ; 200                ;      ;    ;             ;
; Report Minimum Timing Checks                                                                         ; Off                ;      ;    ;             ;
; Use Fast Timing Models                                                                               ; Off                ;      ;    ;             ;
; Report IO Paths Separately                                                                           ; Off                ;      ;    ;             ;
; Perform Multicorner Analysis                                                                         ; On                 ;      ;    ;             ;
; Reports the worst-case path for each clock domain and analysis                                       ; Off                ;      ;    ;             ;
; Reports worst-case timing paths for each clock domain and analysis                                   ; Off                ;      ;    ;             ;
; Specifies the maximum number of worst-case timing paths to report for each clock domain and analysis ; 100                ;      ;    ;             ;
; Removes common clock path pessimism (CCPP) during slack computation                                  ; Off                ;      ;    ;             ;
; Output I/O Timing Endpoint                                                                           ; Near End           ;      ;    ;             ;
+------------------------------------------------------------------------------------------------------+--------------------+------+----+-------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clock Settings Summary                                                                                                                                                             ;
+-----------------+--------------------+----------+------------------+---------------+--------------+----------+-----------------------+---------------------+--------+--------------+
; Clock Node Name ; Clock Setting Name ; Type     ; Fmax Requirement ; Early Latency ; Late Latency ; Based on ; Multiply Base Fmax by ; Divide Base Fmax by ; Offset ; Phase offset ;
+-----------------+--------------------+----------+------------------+---------------+--------------+----------+-----------------------+---------------------+--------+--------------+
; clock           ;                    ; User Pin ; None             ; 0.000 ns      ; 0.000 ns     ; --       ; N/A                   ; N/A                 ; N/A    ;              ;
+-----------------+--------------------+----------+------------------+---------------+--------------+----------+-----------------------+---------------------+--------+--------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 6      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clock Setup: 'clock'                                                                                                                                                                                         ;
+-------+------------------------------------------------+--------------------+--------------------+------------+----------+-----------------------------+---------------------------+-------------------------+
; Slack ; Actual fmax (period)                           ; From               ; To                 ; From Clock ; To Clock ; Required Setup Relationship ; Required Longest P2P Time ; Actual Longest P2P Time ;
+-------+------------------------------------------------+--------------------+--------------------+------------+----------+-----------------------------+---------------------------+-------------------------+
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.610 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.610 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.585 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.585 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.549 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.549 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.521 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.518 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.514 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.461 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.453 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.452 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.452 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.456 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.454 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.447 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.453 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.451 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.AND     ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.427 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.409 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.413 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.411 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.404 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.404 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.399 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.391 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.391 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.391 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.390 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.395 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.395 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.393 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.393 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.387 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.392 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.392 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.392 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.392 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.386 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.390 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.390 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.389 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.389 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.380 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.379 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.379 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.374 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.374 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.373 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.364 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.356 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.359 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.357 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.350 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.352 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.352 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.350 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.350 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.349 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WAIT         ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.349 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.315 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.312 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.312 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.308 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.302 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.302 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.298 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.298 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.296 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.296 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.295 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.295 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.290 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.288 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.268 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.268 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.268 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.267 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.264 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.263 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.257 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.251 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.251 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.250 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.247 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.245 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.229 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.229 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.227 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.227 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.226 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.WRITE_ARIT   ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.226 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.186 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.186 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.184 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.184 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.183 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.183 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.174 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH_2      ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.166 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.130 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.136 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.129 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.134 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.123 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.114 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.114 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.114 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.113 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.110 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.109 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.103 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.097 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.097 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.096 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.094 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.094 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FETCH        ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.089 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.AND     ; clock      ; clock    ; None                        ; None                      ; 1.085 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 1.083 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.075 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.075 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.073 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.073 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.072 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.FINAL        ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.072 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.063 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.063 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.063 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.062 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.058 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.052 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.046 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.046 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 1.045 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 1.037 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.037 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.DECODE       ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 1.031 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.ADD          ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 1.031 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 1.024 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 1.024 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 1.022 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 1.022 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 1.021 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; state.00000000     ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 1.021 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.FINAL   ; state.FINAL        ; clock      ; clock    ; None                        ; None                      ; 0.817 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.AND     ; state.WRITE_ARIT   ; clock      ; clock    ; None                        ; None                      ; 0.787 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.DECODE  ; state.DECODE       ; clock      ; clock    ; None                        ; None                      ; 0.783 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.ADD     ; state.ADD          ; clock      ; clock    ; None                        ; None                      ; 0.773 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.WAIT    ; state.WAIT         ; clock      ; clock    ; None                        ; None                      ; 0.527 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.FETCH_2 ; state.FETCH_2      ; clock      ; clock    ; None                        ; None                      ; 0.524 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.000000  ; state.00000000     ; clock      ; clock    ; None                        ; None                      ; 0.523 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.FETCH   ; state.FETCH        ; clock      ; clock    ; None                        ; None                      ; 0.520 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.FETCH   ; next_state.FETCH   ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.FETCH_2 ; next_state.FETCH_2 ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.DECODE  ; next_state.DECODE  ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.ADD     ; next_state.ADD     ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.FINAL   ; next_state.FINAL   ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; mux_6[1]~reg0      ; mux_6[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; mux_7[0]~reg0      ; mux_7[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; ir_write~reg0      ; ir_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; ALU_OUT~reg0       ; ALU_OUT~reg0       ; clock      ; clock    ; None                        ; None                      ; 0.488 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; pc_write~reg0      ; pc_write~reg0      ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.WAIT    ; next_state.WAIT    ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; next_state.000000  ; next_state.000000  ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; mux_8[1]~reg0      ; mux_8[1]~reg0      ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; mux_9[0]~reg0      ; mux_9[0]~reg0      ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; mem_write~reg0     ; mem_write~reg0     ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; ALU_CONTROL~reg0   ; ALU_CONTROL~reg0   ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
; N/A   ; Restricted to 500.00 MHz ( period = 2.000 ns ) ; REG_WRITE~reg0     ; REG_WRITE~reg0     ; clock      ; clock    ; None                        ; None                      ; 0.396 ns                ;
+-------+------------------------------------------------+--------------------+--------------------+------------+----------+-----------------------------+---------------------------+-------------------------+


+-------------------------------------------------------------------------------+
; tsu                                                                           ;
+-------+--------------+------------+-----------+--------------------+----------+
; Slack ; Required tsu ; Actual tsu ; From      ; To                 ; To Clock ;
+-------+--------------+------------+-----------+--------------------+----------+
; N/A   ; None         ; 5.600 ns   ; funct[2]  ; next_state.000000  ; clock    ;
; N/A   ; None         ; 5.384 ns   ; funct[2]  ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 5.380 ns   ; funct[2]  ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 5.368 ns   ; funct[2]  ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 5.289 ns   ; funct[3]  ; next_state.000000  ; clock    ;
; N/A   ; None         ; 5.250 ns   ; funct[2]  ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 5.245 ns   ; funct[2]  ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 5.073 ns   ; funct[3]  ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 5.069 ns   ; funct[3]  ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 5.057 ns   ; funct[3]  ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 4.939 ns   ; funct[3]  ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 4.934 ns   ; funct[3]  ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 4.880 ns   ; funct[1]  ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.862 ns   ; funct[0]  ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.781 ns   ; funct[3]  ; next_state.AND     ; clock    ;
; N/A   ; None         ; 4.664 ns   ; funct[1]  ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 4.660 ns   ; funct[1]  ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 4.648 ns   ; funct[1]  ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 4.646 ns   ; funct[0]  ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 4.642 ns   ; funct[0]  ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 4.630 ns   ; funct[0]  ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 4.566 ns   ; funct[4]  ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.530 ns   ; funct[1]  ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 4.525 ns   ; funct[1]  ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 4.512 ns   ; funct[0]  ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 4.507 ns   ; funct[0]  ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 4.488 ns   ; opcode[1] ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.407 ns   ; opcode[2] ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.396 ns   ; funct[5]  ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.371 ns   ; opcode[3] ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.350 ns   ; opcode[0] ; next_state.000000  ; clock    ;
; N/A   ; None         ; 4.350 ns   ; funct[4]  ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 4.346 ns   ; funct[4]  ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 4.344 ns   ; funct[2]  ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 4.334 ns   ; funct[4]  ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 4.216 ns   ; funct[4]  ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 4.211 ns   ; funct[4]  ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 4.189 ns   ; funct[2]  ; next_state.AND     ; clock    ;
; N/A   ; None         ; 4.180 ns   ; funct[5]  ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 4.176 ns   ; funct[5]  ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 4.164 ns   ; funct[5]  ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 4.108 ns   ; opcode[1] ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 4.104 ns   ; opcode[1] ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 4.092 ns   ; opcode[1] ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 4.046 ns   ; funct[5]  ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 4.041 ns   ; funct[5]  ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 4.032 ns   ; funct[3]  ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 4.029 ns   ; funct[0]  ; next_state.AND     ; clock    ;
; N/A   ; None         ; 4.027 ns   ; opcode[2] ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 4.023 ns   ; opcode[2] ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 4.011 ns   ; opcode[2] ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 3.991 ns   ; opcode[3] ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 3.987 ns   ; opcode[3] ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 3.975 ns   ; opcode[3] ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 3.974 ns   ; opcode[1] ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 3.970 ns   ; opcode[0] ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 3.969 ns   ; opcode[1] ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 3.966 ns   ; opcode[0] ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 3.954 ns   ; opcode[0] ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 3.893 ns   ; opcode[2] ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 3.888 ns   ; opcode[2] ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 3.857 ns   ; opcode[3] ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 3.852 ns   ; opcode[3] ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 3.836 ns   ; opcode[0] ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 3.831 ns   ; opcode[0] ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 3.825 ns   ; opcode[1] ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.819 ns   ; opcode[5] ; next_state.000000  ; clock    ;
; N/A   ; None         ; 3.813 ns   ; opcode[1] ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.746 ns   ; funct[1]  ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.744 ns   ; opcode[2] ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.732 ns   ; opcode[2] ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.708 ns   ; opcode[3] ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.706 ns   ; funct[4]  ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.696 ns   ; opcode[3] ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.687 ns   ; opcode[0] ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.675 ns   ; opcode[0] ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.674 ns   ; funct[5]  ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.652 ns   ; opcode[4] ; next_state.000000  ; clock    ;
; N/A   ; None         ; 3.633 ns   ; opcode[5] ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.621 ns   ; opcode[5] ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.616 ns   ; funct[1]  ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.605 ns   ; funct[0]  ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.603 ns   ; opcode[5] ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 3.599 ns   ; opcode[5] ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 3.587 ns   ; opcode[5] ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 3.477 ns   ; opcode[4] ; next_state.AND     ; clock    ;
; N/A   ; None         ; 3.469 ns   ; opcode[5] ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 3.465 ns   ; opcode[4] ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.464 ns   ; opcode[5] ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 3.434 ns   ; opcode[4] ; next_state.WAIT    ; clock    ;
; N/A   ; None         ; 3.430 ns   ; opcode[4] ; next_state.DECODE  ; clock    ;
; N/A   ; None         ; 3.418 ns   ; opcode[4] ; next_state.FETCH   ; clock    ;
; N/A   ; None         ; 3.399 ns   ; funct[4]  ; next_state.ADD     ; clock    ;
; N/A   ; None         ; 3.300 ns   ; opcode[4] ; next_state.FETCH_2 ; clock    ;
; N/A   ; None         ; 3.295 ns   ; opcode[4] ; next_state.FINAL   ; clock    ;
; N/A   ; None         ; 3.233 ns   ; funct[5]  ; next_state.ADD     ; clock    ;
+-------+--------------+------------+-----------+--------------------+----------+


+---------------------------------------------------------------------------------+
; tco                                                                             ;
+-------+--------------+------------+------------------+-------------+------------+
; Slack ; Required tco ; Actual tco ; From             ; To          ; From Clock ;
+-------+--------------+------------+------------------+-------------+------------+
; N/A   ; None         ; 7.152 ns   ; mux_7[0]~reg0    ; mux_6[2]    ; clock      ;
; N/A   ; None         ; 6.889 ns   ; pc_write~reg0    ; pc_write    ; clock      ;
; N/A   ; None         ; 6.876 ns   ; mux_7[0]~reg0    ; mux_7[2]    ; clock      ;
; N/A   ; None         ; 6.289 ns   ; mem_write~reg0   ; mem_write   ; clock      ;
; N/A   ; None         ; 5.646 ns   ; mux_7[0]~reg0    ; mux_7[0]    ; clock      ;
; N/A   ; None         ; 5.638 ns   ; REG_WRITE~reg0   ; REG_WRITE   ; clock      ;
; N/A   ; None         ; 5.622 ns   ; mux_7[0]~reg0    ; mux_7[1]    ; clock      ;
; N/A   ; None         ; 5.616 ns   ; ALU_CONTROL~reg0 ; ALU_CONTROL ; clock      ;
; N/A   ; None         ; 5.599 ns   ; ir_write~reg0    ; ir_write    ; clock      ;
; N/A   ; None         ; 5.361 ns   ; mux_9[0]~reg0    ; mux_9[0]    ; clock      ;
; N/A   ; None         ; 5.352 ns   ; ALU_OUT~reg0     ; ALU_OUT     ; clock      ;
; N/A   ; None         ; 5.351 ns   ; mux_8[1]~reg0    ; mux_8[1]    ; clock      ;
; N/A   ; None         ; 5.186 ns   ; mux_6[1]~reg0    ; mux_6[1]    ; clock      ;
+-------+--------------+------------+------------------+-------------+------------+


+-------------------------------------------------------------------------------------+
; th                                                                                  ;
+---------------+-------------+-----------+-----------+--------------------+----------+
; Minimum Slack ; Required th ; Actual th ; From      ; To                 ; To Clock ;
+---------------+-------------+-----------+-----------+--------------------+----------+
; N/A           ; None        ; -2.897 ns ; funct[5]  ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.056 ns ; opcode[4] ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.061 ns ; opcode[4] ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -3.071 ns ; funct[4]  ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.179 ns ; opcode[4] ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -3.191 ns ; opcode[4] ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -3.195 ns ; opcode[4] ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -3.219 ns ; funct[1]  ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.225 ns ; opcode[5] ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.226 ns ; opcode[4] ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.230 ns ; funct[5]  ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.230 ns ; opcode[5] ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -3.238 ns ; opcode[4] ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.254 ns ; funct[4]  ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.292 ns ; funct[1]  ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.313 ns ; funct[0]  ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.348 ns ; opcode[5] ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -3.360 ns ; opcode[5] ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -3.364 ns ; opcode[5] ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -3.382 ns ; opcode[5] ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.394 ns ; opcode[5] ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.413 ns ; opcode[4] ; next_state.000000  ; clock    ;
; N/A           ; None        ; -3.436 ns ; opcode[0] ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.448 ns ; opcode[0] ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.457 ns ; opcode[3] ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.469 ns ; opcode[3] ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.493 ns ; opcode[2] ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.505 ns ; opcode[2] ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.574 ns ; opcode[1] ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.576 ns ; funct[0]  ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.580 ns ; opcode[5] ; next_state.000000  ; clock    ;
; N/A           ; None        ; -3.586 ns ; opcode[1] ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.592 ns ; opcode[0] ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.597 ns ; opcode[0] ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -3.613 ns ; opcode[3] ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.618 ns ; opcode[3] ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -3.649 ns ; opcode[2] ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.654 ns ; opcode[2] ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -3.715 ns ; opcode[0] ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -3.727 ns ; opcode[0] ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -3.730 ns ; opcode[1] ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.731 ns ; opcode[0] ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -3.735 ns ; opcode[1] ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -3.736 ns ; opcode[3] ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -3.748 ns ; opcode[3] ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -3.752 ns ; opcode[3] ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -3.753 ns ; funct[3]  ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.772 ns ; opcode[2] ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -3.784 ns ; opcode[2] ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -3.788 ns ; opcode[2] ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -3.802 ns ; funct[5]  ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.807 ns ; funct[5]  ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -3.853 ns ; opcode[1] ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -3.865 ns ; opcode[1] ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -3.869 ns ; opcode[1] ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -3.910 ns ; funct[2]  ; next_state.ADD     ; clock    ;
; N/A           ; None        ; -3.925 ns ; funct[5]  ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -3.937 ns ; funct[5]  ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -3.941 ns ; funct[5]  ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -3.950 ns ; funct[2]  ; next_state.AND     ; clock    ;
; N/A           ; None        ; -3.972 ns ; funct[4]  ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -3.977 ns ; funct[4]  ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -4.095 ns ; funct[4]  ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -4.107 ns ; funct[4]  ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -4.111 ns ; opcode[0] ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.111 ns ; funct[4]  ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -4.132 ns ; opcode[3] ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.157 ns ; funct[5]  ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.168 ns ; opcode[2] ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.249 ns ; opcode[1] ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.268 ns ; funct[0]  ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -4.273 ns ; funct[0]  ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -4.286 ns ; funct[1]  ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -4.291 ns ; funct[1]  ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -4.327 ns ; funct[4]  ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.328 ns ; funct[3]  ; next_state.AND     ; clock    ;
; N/A           ; None        ; -4.391 ns ; funct[0]  ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -4.403 ns ; funct[0]  ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -4.407 ns ; funct[0]  ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -4.409 ns ; funct[1]  ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -4.421 ns ; funct[1]  ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -4.425 ns ; funct[1]  ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -4.623 ns ; funct[0]  ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.641 ns ; funct[1]  ; next_state.000000  ; clock    ;
; N/A           ; None        ; -4.695 ns ; funct[3]  ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -4.700 ns ; funct[3]  ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -4.818 ns ; funct[3]  ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -4.830 ns ; funct[3]  ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -4.834 ns ; funct[3]  ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -5.006 ns ; funct[2]  ; next_state.FINAL   ; clock    ;
; N/A           ; None        ; -5.011 ns ; funct[2]  ; next_state.FETCH_2 ; clock    ;
; N/A           ; None        ; -5.050 ns ; funct[3]  ; next_state.000000  ; clock    ;
; N/A           ; None        ; -5.129 ns ; funct[2]  ; next_state.FETCH   ; clock    ;
; N/A           ; None        ; -5.141 ns ; funct[2]  ; next_state.DECODE  ; clock    ;
; N/A           ; None        ; -5.145 ns ; funct[2]  ; next_state.WAIT    ; clock    ;
; N/A           ; None        ; -5.361 ns ; funct[2]  ; next_state.000000  ; clock    ;
+---------------+-------------+-----------+-----------+--------------------+----------+


+--------------------------+
; Timing Analyzer Messages ;
+--------------------------+
Info: *******************************************************************
Info: Running Quartus II Classic Timing Analyzer
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Wed Oct 16 00:10:47 2019
Info: Command: quartus_tan --read_settings_files=off --write_settings_files=off DedoNoQuartusEGritaria -c DedoNoQuartusEGritaria --timing_analysis_only
Warning: Found pins functioning as undefined clocks and/or memory enables
    Info: Assuming node "clock" is an undefined clock
Info: Clock "clock" Internal fmax is restricted to 500.0 MHz between source register "state.DECODE" and destination register "ir_write~reg0"
    Info: fmax restricted to clock pin edge rate 2.0 ns. Expand message to see actual delay path.
        Info: + Longest register to register delay is 1.610 ns
            Info: 1: + IC(0.000 ns) + CELL(0.000 ns) = 0.000 ns; Loc. = LCFF_X9_Y4_N3; Fanout = 7; REG Node = 'state.DECODE'
            Info: 2: + IC(0.254 ns) + CELL(0.228 ns) = 0.482 ns; Loc. = LCCOMB_X9_Y4_N8; Fanout = 8; COMB Node = 'WideNor0~0'
            Info: 3: + IC(0.627 ns) + CELL(0.346 ns) = 1.455 ns; Loc. = LCCOMB_X6_Y4_N20; Fanout = 1; COMB Node = 'Selector34~0'
            Info: 4: + IC(0.000 ns) + CELL(0.155 ns) = 1.610 ns; Loc. = LCFF_X6_Y4_N21; Fanout = 2; REG Node = 'ir_write~reg0'
            Info: Total cell delay = 0.729 ns ( 45.28 % )
            Info: Total interconnect delay = 0.881 ns ( 54.72 % )
        Info: - Smallest clock skew is -0.006 ns
            Info: + Shortest clock path from clock "clock" to destination register is 2.484 ns
                Info: 1: + IC(0.000 ns) + CELL(0.854 ns) = 0.854 ns; Loc. = PIN_N20; Fanout = 1; CLK Node = 'clock'
                Info: 2: + IC(0.343 ns) + CELL(0.000 ns) = 1.197 ns; Loc. = CLKCTRL_G3; Fanout = 26; COMB Node = 'clock~clkctrl'
                Info: 3: + IC(0.669 ns) + CELL(0.618 ns) = 2.484 ns; Loc. = LCFF_X6_Y4_N21; Fanout = 2; REG Node = 'ir_write~reg0'
                Info: Total cell delay = 1.472 ns ( 59.26 % )
                Info: Total interconnect delay = 1.012 ns ( 40.74 % )
            Info: - Longest clock path from clock "clock" to source register is 2.490 ns
                Info: 1: + IC(0.000 ns) + CELL(0.854 ns) = 0.854 ns; Loc. = PIN_N20; Fanout = 1; CLK Node = 'clock'
                Info: 2: + IC(0.343 ns) + CELL(0.000 ns) = 1.197 ns; Loc. = CLKCTRL_G3; Fanout = 26; COMB Node = 'clock~clkctrl'
                Info: 3: + IC(0.675 ns) + CELL(0.618 ns) = 2.490 ns; Loc. = LCFF_X9_Y4_N3; Fanout = 7; REG Node = 'state.DECODE'
                Info: Total cell delay = 1.472 ns ( 59.12 % )
                Info: Total interconnect delay = 1.018 ns ( 40.88 % )
        Info: + Micro clock to output delay of source is 0.094 ns
        Info: + Micro setup delay of destination is 0.090 ns
Info: tsu for register "next_state.000000" (data pin = "funct[2]", clock pin = "clock") is 5.600 ns
    Info: + Longest pin to register delay is 8.000 ns
        Info: 1: + IC(0.000 ns) + CELL(0.827 ns) = 0.827 ns; Loc. = PIN_E14; Fanout = 4; PIN Node = 'funct[2]'
        Info: 2: + IC(4.888 ns) + CELL(0.272 ns) = 5.987 ns; Loc. = LCCOMB_X10_Y4_N10; Fanout = 2; COMB Node = 'WideOr14~0'
        Info: 3: + IC(0.505 ns) + CELL(0.346 ns) = 6.838 ns; Loc. = LCCOMB_X9_Y4_N0; Fanout = 1; COMB Node = 'next_state.000000~0'
        Info: 4: + IC(0.735 ns) + CELL(0.272 ns) = 7.845 ns; Loc. = LCCOMB_X9_Y4_N18; Fanout = 1; COMB Node = 'next_state.000000~1'
        Info: 5: + IC(0.000 ns) + CELL(0.155 ns) = 8.000 ns; Loc. = LCFF_X9_Y4_N19; Fanout = 2; REG Node = 'next_state.000000'
        Info: Total cell delay = 1.872 ns ( 23.40 % )
        Info: Total interconnect delay = 6.128 ns ( 76.60 % )
    Info: + Micro setup delay of destination is 0.090 ns
    Info: - Shortest clock path from clock "clock" to destination register is 2.490 ns
        Info: 1: + IC(0.000 ns) + CELL(0.854 ns) = 0.854 ns; Loc. = PIN_N20; Fanout = 1; CLK Node = 'clock'
        Info: 2: + IC(0.343 ns) + CELL(0.000 ns) = 1.197 ns; Loc. = CLKCTRL_G3; Fanout = 26; COMB Node = 'clock~clkctrl'
        Info: 3: + IC(0.675 ns) + CELL(0.618 ns) = 2.490 ns; Loc. = LCFF_X9_Y4_N19; Fanout = 2; REG Node = 'next_state.000000'
        Info: Total cell delay = 1.472 ns ( 59.12 % )
        Info: Total interconnect delay = 1.018 ns ( 40.88 % )
Info: tco from clock "clock" to destination pin "mux_6[2]" through register "mux_7[0]~reg0" is 7.152 ns
    Info: + Longest clock path from clock "clock" to source register is 2.484 ns
        Info: 1: + IC(0.000 ns) + CELL(0.854 ns) = 0.854 ns; Loc. = PIN_N20; Fanout = 1; CLK Node = 'clock'
        Info: 2: + IC(0.343 ns) + CELL(0.000 ns) = 1.197 ns; Loc. = CLKCTRL_G3; Fanout = 26; COMB Node = 'clock~clkctrl'
        Info: 3: + IC(0.669 ns) + CELL(0.618 ns) = 2.484 ns; Loc. = LCFF_X6_Y4_N7; Fanout = 5; REG Node = 'mux_7[0]~reg0'
        Info: Total cell delay = 1.472 ns ( 59.26 % )
        Info: Total interconnect delay = 1.012 ns ( 40.74 % )
    Info: + Micro clock to output delay of source is 0.094 ns
    Info: + Longest register to pin delay is 4.574 ns
        Info: 1: + IC(0.000 ns) + CELL(0.000 ns) = 0.000 ns; Loc. = LCFF_X6_Y4_N7; Fanout = 5; REG Node = 'mux_7[0]~reg0'
        Info: 2: + IC(2.450 ns) + CELL(2.124 ns) = 4.574 ns; Loc. = PIN_R6; Fanout = 0; PIN Node = 'mux_6[2]'
        Info: Total cell delay = 2.124 ns ( 46.44 % )
        Info: Total interconnect delay = 2.450 ns ( 53.56 % )
Info: th for register "next_state.ADD" (data pin = "funct[5]", clock pin = "clock") is -2.897 ns
    Info: + Longest clock path from clock "clock" to destination register is 2.491 ns
        Info: 1: + IC(0.000 ns) + CELL(0.854 ns) = 0.854 ns; Loc. = PIN_N20; Fanout = 1; CLK Node = 'clock'
        Info: 2: + IC(0.343 ns) + CELL(0.000 ns) = 1.197 ns; Loc. = CLKCTRL_G3; Fanout = 26; COMB Node = 'clock~clkctrl'
        Info: 3: + IC(0.676 ns) + CELL(0.618 ns) = 2.491 ns; Loc. = LCFF_X10_Y4_N19; Fanout = 2; REG Node = 'next_state.ADD'
        Info: Total cell delay = 1.472 ns ( 59.09 % )
        Info: Total interconnect delay = 1.019 ns ( 40.91 % )
    Info: + Micro hold delay of destination is 0.149 ns
    Info: - Shortest pin to register delay is 5.537 ns
        Info: 1: + IC(0.000 ns) + CELL(0.827 ns) = 0.827 ns; Loc. = PIN_V13; Fanout = 5; PIN Node = 'funct[5]'
        Info: 2: + IC(3.800 ns) + CELL(0.154 ns) = 4.781 ns; Loc. = LCCOMB_X10_Y4_N0; Fanout = 1; COMB Node = 'Selector43~0'
        Info: 3: + IC(0.255 ns) + CELL(0.346 ns) = 5.382 ns; Loc. = LCCOMB_X10_Y4_N18; Fanout = 1; COMB Node = 'Selector43~2'
        Info: 4: + IC(0.000 ns) + CELL(0.155 ns) = 5.537 ns; Loc. = LCFF_X10_Y4_N19; Fanout = 2; REG Node = 'next_state.ADD'
        Info: Total cell delay = 1.482 ns ( 26.77 % )
        Info: Total interconnect delay = 4.055 ns ( 73.23 % )
Info: Quartus II Classic Timing Analyzer was successful. 0 errors, 1 warning
    Info: Peak virtual memory: 181 megabytes
    Info: Processing ended: Wed Oct 16 00:10:47 2019
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


